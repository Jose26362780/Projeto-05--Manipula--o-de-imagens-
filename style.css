/*variaveis no css
esta baseado para determinado escopo
 e os estilos que serao aplicados em cada escopo 
 o root seria o escopo geral
 se coloca a propriedade 
 com -- e o nome que eu quero */
/* o hsl é uma propriedade para alterar 
a coloração com a var hue como exemplo 
fica mais pratico mudar toda a cor do documento
não funciona 100% das vezes em alguns projetos é ideal*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --ff-heading: 'Epilogue', sans-serif;
  --ff-texting: 'Open sans', sans-serif;

  --hue: 250;
  --bg-primary: hsl(var(--hue), 22%, 20%);
  --fc-primary: hsl(var(--hue), 0%, 100%);
  --fc-secundary: hsl(var(--hue), 50%, 80%);

  --fc-secundary-dark: hsl(var(--hue), 100%, 11%, 1);

  font-size: 62.5%;
  --fs-body: 1.6rem;
  --fs-heading: clamp(4rem, 1rem + 5vw, 5.6rem);
  --fs-heading-sm: clamp(3rem, 0.5rem + 3vw, 4rem);
}

/*clamp é uma funçao que recebe um argumento
o valor minimo  o valor ideal e o valor maximo que aceita
 */

body {
  font-family: var(--ff-texting);

  background: var(--bg-primary);
  color: var(--fc-primary);

  font-size: var(--fs-body);
}
/* o (.) é para dar estilo a uma classe que tenha sido chamada no html*/

.page {
  max-width: clamp(33rem, 30rem + 60vw, 117rem);
  padding: 0 5rem;
  margin: 0 auto;
}

img {
  width: 100%;
  height: auto;
}
header {
  margin: 10rem 0 8rem;
  font-family: var(--ff-heading);
  text-align: center;
  animation: topdown 700ms;
}

header p {
  color: var(--fc-secundary);
  text-transform: uppercase;

  line-height: 3.2rem;
  letter-spacing: 3px;
  font-weight: 400;

  margin-bottom: 1.7rem;
}

header h1 {
  font-weight: 800;
  font-size: var(--fs-heading);

  line-height: 4.8rem;
}

main {
  display: grid; /* o display gird desbloqueia a propriedade gap*/
  gap: 3.2rem; /* o gap faz espaçamento entre os elementos*/

  padding-bottom: 10rem;
  animation: downtop 700ms 450ms backwards;
}

.card {
  position: relative;
  font-family: var(--ff-heading);
}

.card img {
  height: 41.6rem;
  object-fit: cover; /*objec-fit é uma propriedade para encaixar
  a imagem e a url como se fosse um objeto*/
  filter: brightness(0.5);
  border-radius: 6px;
  transition: all 200ms;
}

.card img:hover {
  transform: scale(1.1);
  opacity: 0.4;
}

.card h2 {
  position: absolute;
  bottom: 5.2rem;
  left: 2.8rem;

  font-size: var(--fs-heading-sm);
  font-weight: 800;
  display: flex;
  flex-direction: column;
  gap: 2.8rem;
}

.card h2 span {
  border-radius: 2rem;
  background-color: var(--fc-primary);
  font-size: var(--fs-body);
  font-weight: 400;
  color: var(--fc-secundary-dark);
  padding: 0 1.6rem;

  width: fit-content;
  height: 3.8rem;
  display: inline-flex;
  align-items: center;
}

/*regras de animaçoes keyframes*/
/* seriam pontos chaves de nossa animação
o "topdown" seria o nome
define como seria o inicio da animação no 
0% e o final seria o 100% cabe destacar que é interessante estudar 
sobre animaçoes para ver como se aplica mais 
*/

@keyframes topdown {
  0% {
    opacity: 0;
    transform: translateY(-15px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes downtop {
  0% {
    opacity: 0;
    transform: translateY(15px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}



@media (min-width: 700px) {
  main {
    grid-template-columns: 1fr 1fr;
  }
}

@media (min-width: 930px) {
  main {
    grid-template-areas:
      'A B B'
      'C C D';
  }

  main div:nth-child(1) {
    grid-area: A;
  }

  main div:nth-child(2) {
    grid-area: B;
  }

  main div:nth-child(3) {
    grid-area: C;
  }

  main div:nth-child(4) {
    grid-area: D;
  }
}


